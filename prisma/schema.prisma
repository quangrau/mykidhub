// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum AccountRole {
  ADMIN
  SCHOOL_ADMIN
  TEACHER
  GUARDIAN
}

model Account {
  id            String            @id @default(cuid())
  name          String?
  email         String?           @unique
  emailVerified DateTime?
  password      String?
  image         String?
  phone         String?
  role          AccountRole?
  guardians     GuardianStudent[]
  school        School?           @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  schoolId      String?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model School {
  id         String      @id @default(cuid())
  name       String
  slug       String      @unique
  adminEmail String
  phone      String?
  address    String?
  metadata   Json?       @default("{}") @db.JsonB
  capacity   Int?        @default(0)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  accounts   Account[]
  classrooms Classroom[]
  students   Student[]
}

model Classroom {
  id        String    @id @default(cuid())
  name      String
  schoolId  String
  capacity  Int?
  status    Int       @default(1)
  school    School    @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  students  Student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Student {
  id          String            @id @default(cuid())
  firstName   String
  lastName    String
  dateOfBirth DateTime?
  schoolId    String
  classroomId String
  school      School            @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  classroom   Classroom         @relation(fields: [classroomId], references: [id])
  guardians   GuardianStudent[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime?         @updatedAt
}

enum InvitationStatus {
  NOT_INVITED
  INVITED
  SIGNED_UP
}

model GuardianStudent {
  id         String           @id @default(cuid())
  studentId  String
  student    Student          @relation(fields: [studentId], references: [id], onDelete: Cascade)
  guardian   Account          @relation(fields: [guardianId], references: [id])
  guardianId String
  relation   String?
  status     InvitationStatus @default(NOT_INVITED)
  email      String?
  phone      String?
  createdAt  DateTime         @default(now())
  updatedAt  DateTime?        @updatedAt

  @@unique([guardianId, studentId])
}
